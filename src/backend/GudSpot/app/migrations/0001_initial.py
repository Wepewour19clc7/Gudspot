# Generated by Django 3.2.8 on 2022-01-11 13:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='user_information',
            fields=[
                ('description', models.TextField()),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('user_type', models.IntegerField(choices=[(0, 'Admin'), (1, 'Owner'), (2, 'Users')])),
                ('avatar', models.JSONField()),
                ('username', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('store_address', models.CharField(max_length=200)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('img_url', models.JSONField()),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('img_url', models.JSONField()),
                ('posted_date', models.DateTimeField(auto_now_add=True)),
                ('store_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.store')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('score', models.IntegerField(choices=[(1, 'TooBad'), (2, 'Bad'), (3, 'Neutral'), (4, 'Good'), (5, 'VeryGood')])),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.store')),
            ],
            options={
                'unique_together': {('store_id', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.store')),
            ],
            options={
                'unique_together': {('store_id', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.store')),
            ],
            options={
                'unique_together': {('store_id', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('blog_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.blog')),
            ],
            options={
                'unique_together': {('blog_id', 'user_id')},
            },
        ),
    ]
